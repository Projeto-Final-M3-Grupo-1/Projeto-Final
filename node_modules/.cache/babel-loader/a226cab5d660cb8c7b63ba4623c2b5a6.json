{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafael'\\\\Desktop\\\\Projeto final front end\\\\Projeto-Final\\\\src\\\\Providers\\\\UserProvider.tsx\";\nimport { createContext } from \"react\";\nimport api from \"../Services/api\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({});\nexport const UserProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const onSubmitLogin = data => {\n    api.post(\"/users\", data).then(() => {\n      toast.success(\"Cadastro realizado com sucesso!\");\n      navigate(\"/login\");\n    }).catch(() => toast.error(\"Cadastro não realizado\"));\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      onSubmitLogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","api","toast","UserContext","UserProvider","children","onSubmitLogin","data","post","then","success","navigate","catch","error"],"sources":["C:/Users/rafael'/Desktop/Projeto final front end/Projeto-Final/src/Providers/UserProvider.tsx"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../Services/api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface IUserContext {\r\n    onSubmitLogin: any;\r\n}\r\ninterface IUserChildren {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const UserContext = createContext<IUserContext>({} as IUserContext);\r\n\r\nexport const UserProvider = ({ children }: IUserChildren) => {\r\n    const onSubmitLogin = (data: any) => {\r\n        api.post(\"/users\", data)\r\n            .then(() => {\r\n                toast.success(\"Cadastro realizado com sucesso!\");\r\n                navigate(\"/login\");\r\n            })\r\n            .catch(() => toast.error(\"Cadastro não realizado\"));\r\n    };\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                onSubmitLogin,\r\n            }}\r\n        >\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";AAAA,SAASA,aAAa,QAAkB,OAAO;AAG/C,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,KAAK,QAAQ,gBAAgB;AAAC;AASvC,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAe,CAAC,CAAC,CAAiB;AAE1E,OAAO,MAAMI,YAAY,GAAG,QAAiC;EAAA,IAAhC;IAAEC;EAAwB,CAAC;EACpD,MAAMC,aAAa,GAAIC,IAAS,IAAK;IACjCN,GAAG,CAACO,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC,CACnBE,IAAI,CAAC,MAAM;MACRP,KAAK,CAACQ,OAAO,CAAC,iCAAiC,CAAC;MAChDC,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAAC,MAAMV,KAAK,CAACW,KAAK,CAAC,wBAAwB,CAAC,CAAC;EAC3D,CAAC;EACD,oBACI,QAAC,WAAW,CAAC,QAAQ;IACjB,KAAK,EAAE;MACHP;IACJ,CAAE;IAAA,UAEDD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAE/B,CAAC;AAAC,KAlBWD,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}